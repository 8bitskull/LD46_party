
local input = require "input.input"
local h = require "utilities.h"
local pathfinder = require "utilities.pathfinder"
local guest_manager = require "guest.guest_manager"
local party_supplies = require "party_supplies.party_supplies"

go.property("allow_actions", true)

local function check_for_action_trigger(self)

	local position = go.get_position()
	if vmath.length_sqr(party_supplies.positions[self.queued_action] - position) < 10 and pathfinder.get_location(position) == party_supplies.locations[self.queued_action] then

		msg.post("ui", "action", {action_id = self.queued_action, icon_id = party_supplies.icon_ids[self.queued_action], action_time = party_supplies.action_times[self.queued_action]})
		self.allow_actions = false
		self.queued_action = nil
	end
end

local function complete_action(self, action_id)

	if action_id == h.COCKTAIL then
		party_supplies.make_cocktail()
	elseif action_id == h.BOTTLE then
		party_supplies.replenish_drink_stocks()
	end
end

function init(self)

	self.my_id = go.get_id()

	self.walk_speed = pathfinder.walk_speed * 2

	-- pathfinder.walk_to(self.my_id, go.get_position(), vmath.vector3(-475,-43,0))

	go.set("#sprite", "blend", vmath.vector4(1,0.8,0.2,1))

	self.allow_actions = true
end

function final(self)
end

function update(self, dt)
	
	if input.check(h.MOUSE_BUTTON_RIGHT).pressed then
		pathfinder.walk_to(self.my_id, go.get_position(), input.mouse_location, false, self.walk_speed)

		if self.queued_action then
			self.queued_action = nil
		end

		if self.guest_target then
			msg.post("guest_runner", "release_target", {id = self.guest_target})
			self.guest_target = nil
		end
	end

	if self.queued_action then
		check_for_action_trigger(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == h.GO_TO then
		if self.allow_actions then
			pathfinder.walk_to(self.my_id, go.get_position(), message.position, true, self.walk_speed)
		end
	elseif message_id == h.QUEUED_ACTION then
		if self.allow_actions then
			self.queued_action = message.action
		end
	elseif message_id == h.ACTION_COMPLETE then
		self.allow_actions = true
		complete_action(self, message.action_id)
	elseif message_id == h.GUEST_TARGET then
		self.guest_target = message.id
	end
end